import React, { useState, useEffect } from 'react';
import { auth } from './Components/users/users.js';
import { RecaptchaVerifier, signInWithPhoneNumber, PhoneAuthProvider, signInWithCredential } from 'firebase/auth';

const App = () => {
  const [phoneNumber, setPhoneNumber] = useState('');
  const [verificationCode, setVerificationCode] = useState('');
  const [verificationId, setVerificationId] = useState(null);

  useEffect(() => {
    if (!window.recaptchaVerifier) {
      window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {
        size: 'invisible',
        callback: (response) => {
          console.log('Recaptcha resolved');
        },
        'expired-callback': () => {
          console.log('Recaptcha expired, please solve it again.');
        }
      }, auth);
    }
  }, []);

  const onSignInSubmit = async (e) => {
    e.preventDefault();
    const appVerifier = window.recaptchaVerifier;
    const formattedPhoneNumber = `+91${phoneNumber}`;

    try {
      const confirmationResult = await signInWithPhoneNumber(auth, formattedPhoneNumber, appVerifier);
      setVerificationId(confirmationResult.verificationId);
      console.log('OTP sent successfully');
    } catch (error) {
      console.error('Error during signInWithPhoneNumber', error);
    }
  };

  const onVerifyCodeSubmit = async (e) => {
    e.preventDefault();
    const code = verificationCode;

    try {
      const credential = PhoneAuthProvider.credential(verificationId, code);
      const result = await signInWithCredential(auth, credential);
      console.log('User signed in successfully:', result.user);
    } catch (error) {
      console.error('Error during code verification', error);
    }
  };

  return (
    <div>
      <h1>Phone Sign-In</h1>
      <form onSubmit={onSignInSubmit}>
        <label>
          Enter Mobile Number:
          <input 
            type="text" 
            value={phoneNumber} 
            onChange={(e) => setPhoneNumber(e.target.value)} 
            required 
            placeholder="Enter 10 digit mobile number" 
          />
        </label>
        <button type="submit">Send OTP</button>
      </form>

      <div id="recaptcha-container"></div>

      {verificationId && (
        <form onSubmit={onVerifyCodeSubmit}>
          <label>
            Enter OTP:
            <input 
              type="text" 
              value={verificationCode} 
              onChange={(e) => setVerificationCode(e.target.value)} 
              required 
              placeholder="Enter the OTP" 
            />
          </label>
          <button type="submit">Verify OTP</button>
        </form>
      )}
    </div>
  );
};

export default App;
